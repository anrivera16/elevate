import {FormEvent, useContext, useState} from "react";
import {ApiApi} from "api-client";
import {getApiConfiguration} from "../api/utils";
import {AuthContext} from "../auth/authcontext";
import { useNavigate } from "react-router-dom";


const getClient = () => {
  return new ApiApi(getApiConfiguration());
};

export default function OtpPage() {
  const { setUserDetails } = useContext(AuthContext);
  const [ otp, setOtp ] =  useState('');
  const [error, setError] = useState("");
  const navigate = useNavigate();
  const tempOtpToken = localStorage.getItem('tempOtpToken') || '';

  function onSubmit(e: FormEvent<HTMLFormElement>) {
    e.preventDefault();
    const client = getClient();
    const otpRequest = {
      otp,
      tempOtpToken,
    };
    client.apiAuthVerifyOtpCreate({otpRequest}).then(data => {
      setUserDetails(data);
      return navigate('/');
    }).catch(error => {
      error.response.json().then((error: any) => {
        if (error.status === "token_expired") {
          // token expired, redirect to login
          return navigate('/login/');
        } else if (error.status === "invalid_otp") {
          // bad code, try again
          setError(error.detail)
        } else {
          console.error("unknown error", error);
          setError(error.detail || error.status || JSON.stringify(error));
        }
      });
    });
  }

  return (
    <div className="flex justify-center min-h-screen my-8 ">
      <div className="w-96 px-4 py-4">
        <div>
          <h2 className="mt-6 text-center text-2xl font-bold text-gray-900 dark:text-gray-100">
            Sign In
          </h2>
          <form className="max-w-sm mx-auto" onSubmit={onSubmit}>
            <div className="form-control w-full">
              <label className="label font-bold" htmlFor="email">
                Enter the one-time-code generated by your authenticator application
              </label>
              <input type="text"
                     inputMode="numeric"
                     pattern="[0-9]*"
                     name="otp"
                     id="otp"
                     className="input input-bordered w-full"
                     placeholder="012345" required
                     onChange={(e) => setOtp(e.target.value)}
                     value={otp}
                     />
              {error ? (
                <p className={"text-xs text-red-500 mt-2"}>{error} </p>
              ) : ""}
            </div>
            <div className="mt-2">
              <button type="submit"
                      className="btn btn-primary btn-block">
                Sign In
              </button>
            </div>
          </form>
        </div>
      </div>
    </div>
  );
}
